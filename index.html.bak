<html lang="en"><head>
		<script src="./lib/three67.min.js"></script>
		<script src="./lib/OrbitControls.js"></script>
		<script src="./lib/stats.min.js"></script>		
		
		<title>Earth Clickkkk</title>
		
		
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">
		<style>
			body {
				font-family: Monospace;
background-color:black;
background-image:url(img/sky.jpg);
background-repeat:repeat;
				margin: 0px;
				overflow: hidden;
			}
			#info {
				color: black;
				position: absolute;
				top: 10px;
				width: 100%;
				text-align: center;
				z-index: 100;1
				display:block;
			}
			#info a, .button { color: #f00; font-weight: bold; text-decoration: underline; cursor: pointer }
		</style>
	</head>

	<body>
		<div id="info">
			<a href="http://threejs.org" target="_blank">three.js</a> - Earth Clickkkk - <a href="http://www.witly.fr/portfolio" target="_blank">Aur√©lien Vivet</a>
		</div>


		<script>

		/*
		
			pour le cloud mettre un mesh en forme de T avec le pied sur la terre.
			DatGui pour l'ajout des points sur la terre et suppression modification
			indexeddb ou cookie pour sauvegarde
		
		*/
			var container = document.getElementsByTagName("canvas");
			var camera, scene, renderer;
			var stats = new Stats();
			
			var vector = new THREE.Vector3();
			var mouse = { x: 1, y: 1 };
			var projector = new THREE.Projector();
			var	raycaster = new THREE.Raycaster();
			var intersects;
			var objectsClick = [];
			
			var Earth_segment = Earth_radius = 25;
			var Cloud_radius = 0.5;
			var Cloud_segment = 8;
			


			init();
			animate();

			function init() {

				container = document.createElement( 'div' );
				document.body.appendChild( container );

				camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 2000 );
				
				camera.name = "camera";
				camera.position.x = 0;
				camera.position.y = 30;
				camera.position.z = -80;

				Orbitcontrols = new THREE.OrbitControls( camera );
				
				scene = new THREE.Scene();
				
				// light
				var light = new THREE.PointLight( "white", 1, 100 );
				light.position.set( 0, 20, 20 );
				scene.add( light );

				//SUN
				var directionalLight = new THREE.DirectionalLight( 0xffffff, 1 );
				directionalLight.position.set( 1, 1, 0);
				scene.add( directionalLight );

				//helper
				var axisHelper = new THREE.AxisHelper( 15 );
				scene.add( axisHelper );
				
				var pointLightHelper = new THREE.PointLightHelper( light, 1 );
				scene.add( pointLightHelper );


				geo = new THREE.SphereGeometry(Earth_radius, Earth_segment, Earth_segment);
				
				var Earth_material	= new THREE.MeshPhongMaterial({
					map		: THREE.ImageUtils.loadTexture("./img/bigmap.jpg"),
					//bumpMap		: THREE.ImageUtils.loadTexture("./img/mages/earthbump1k.jpg"),
					//bumpScale	: 0.05,
					//specularMap	: THREE.ImageUtils.loadTexture("./img/earthspec1k.jpg"),
					specular	: new THREE.Color('grey'),
				})
	
				earth = new THREE.Mesh( geo, Earth_material );
				
				earth.name = "earth";
				//object.rotation.x = -90* Math.PI / 180;
				
				scene.add(earth);
				objectsClick.push(earth);
				
				//Render
				
				renderer = new THREE.WebGLRenderer({antialias: true});
				renderer.setSize( window.innerWidth, window.innerHeight );
				
				container.appendChild( renderer.domElement );

				//Stats
				
				stats.domElement.style.position = 'absolute';
				stats.domElement.style.top = '0px';
				container.appendChild( stats.domElement );

				document.addEventListener( 'mousemove', onDocumentMouseMove, false );
				window.addEventListener( 'mouseup', click_on_sphere, false );
				window.addEventListener( 'resize', onWindowResize, false );
			}
			
			function add_cloud(arg_position){
				geo = new THREE.SphereGeometry(Cloud_radius, Cloud_segment, Cloud_segment);
				
				Cloud_mat = new THREE.MeshLambertMaterial({
					color: "white",
					wireframe: false
				});
				cloud = new THREE.Mesh( geo, Cloud_mat );
				
				cloud.name = "Cloud";
				//object.rotation.x = -90* Math.PI / 180;
				cloud.position.set(arg_position.x, arg_position.y, arg_position.z);
				
				scene.add(cloud);
			}
			
			function click_on_sphere(){
				
				vector.set( mouse.x, mouse.y, 0.1 );
				projector.unprojectVector( vector, camera );
				
				var origin = camera.position;
				var direction = vector.sub(camera.position).normalize();
				var obstacles = objectsClick;
				
				var ray = new THREE.Raycaster( origin, direction);
				var intersects = ray.intersectObjects( obstacles, false);
				
				if(intersects[0]){
					
					var position = intersects[0].point;

					add_cloud(position);
				
				}
				
				var length = 25;
				var color = "black";

				//var arrowHelper = new THREE.ArrowHelper( direction, origin, length, color );
				//scene.add( arrowHelper );
				/*
				*/
			}
			
			function onDocumentMouseMove( event ) {

				event.preventDefault();

				mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;
				mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;

			}
			
			function onWindowResize() {

				camera.aspect = window.innerWidth / window.innerHeight;
				camera.updateProjectionMatrix();
				renderer.setSize( window.innerWidth, window.innerHeight );
			}
			
			function animate() {
				Orbitcontrols.update();
				stats.update();
				requestAnimationFrame( animate );
				render();
			}

			function render() {
			
				vector.set( mouse.x, mouse.y, 0.1 );
				projector.unprojectVector( vector, camera );
				renderer.setClearColor( 0x000000, 0 );//couleur de fond du canvas
				renderer.render( scene, camera );
			}

		</script>
</body></html>