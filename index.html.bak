<html lang="en"><head>
		<script src="./lib/three67.min.js"></script>
		<script src="./lib/OrbitControls.js"></script>
		<script src="./lib/stats.min.js"></script>		
		<script src="./lib/DatGUI.js"></script>		
		
		<title>Earth Clickkkk</title>
		
		
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">
		<style>
			body {
				font-family: Monospace;
				background-color:black;
				background-image:url(img/sky.jpg);
				background-repeat:repeat;
				margin: 0px;
				overflow: hidden;
			}
		</style>
	</head>

	<body>

		<img src="img/glow.png" style="display:none;">

		<script>

		/*
			Savoir sur quoi je clique
			Pour pouvoir mettre des liens entre les nuages
			Et avoir des infos selon le nuage :
				Div par dessus le canvas.
			
			Enregistrement :
				indexeddb, cookie, localstorage
		
		*/
			
			var gui = new dat.GUI({
				//height : 5 * 32 - 1
			});
			
			var params = {
			
				Save_all : function(){
					//TODO
					//indexeddb, cookie, localstorage
					
				},
				Cloud_add : function() {
					
					window.addEventListener( 'mouseup', click_on_sphere, false );
					document.body.style.cursor = "crosshair";
					console.log("Add cloud");
				},
				Cloud_delete : function() {
				
					//Pour tout les nuages
					while(scene.getObjectByName("Cloud")){
					
						scene.remove(scene.getObjectByName("Cloud"));
						console.log("Delete cloud");
					}
				},
				link_1 : function(){
					window.location = "http://witly.fr/portfolio/";
				},
				link_2 : function(){
					window.location = "http://threejs.org/";
				},
				link_3 : function(){
					window.location = "https://code.google.com/p/dat-gui/";
				}
			};
			
			var f1 = gui.addFolder("Gestion des nuages");
			f1.add(params, 'Cloud_add').name("Ajouter un nuage");
			f1.add(params, 'Cloud_delete').name("Tout supprimer");
			f1.add(params, 'Save_all').name("WIP Enregistrer");
			f1.open();
			
			var f2 = gui.addFolder("Crédits");
			f2.add(params, 'link_1').name("Auteur : Aurélien Vivet");
			f2.add(params, 'link_2').name("Lien : Threejs");
			//f2.add(params, 'link_3').name("Lien : dat.GUI").color("#f0f");
			
			
			var camera, scene, renderer;
			var stats = new Stats();
			
			var vector = new THREE.Vector3();
			var mouse = { x: 1, y: 1 }; //Position projector
			var projector = new THREE.Projector();
			var	raycaster = new THREE.Raycaster();
			var intersects;
			var objectsClick = []; //Tout les objects "cliquable"
			
			var Earth_glow_color = "#1E7DCC";
			var Earth_segment = Earth_radius = 25;
			
			var Cloud_glow_color = "#259CFF";
			var Cloud_radius = 0.5;
			var Cloud_segment = 8;
			
			
			var time = 0; //Itération de render
			var rand = Math.random()*0.1;
			
			
			init();
			animate();

			
			function init() {

				//Création de la div pour le canvas et les stats
				container = document.createElement( 'div' );
				document.body.appendChild( container );
				
				
				camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 2000 );
				
				camera.name = "camera";
				camera.position.x = 0;
				camera.position.y = 30;
				camera.position.z = -80;

				//Gestion de la caméra
				Orbitcontrols = new THREE.OrbitControls( camera );
				
				scene = new THREE.Scene();
				
				//Glow pour la terre
				glow();
				
				// Light Australie
				var light = new THREE.PointLight( "white", 1, 100 );
				light.position.set( -26, -13, -20 );
				light.name = "PointLight";
				scene.add( light );

				//SUN
				var directionalLight = new THREE.DirectionalLight( 0xffffff, 1 );
				directionalLight.position.set( 1, 1, 0);
				directionalLight.name = "Sun";
				scene.add( directionalLight );

				//Aide axes XYZ Y-up
				var axisHelper = new THREE.AxisHelper( 50 );
				axisHelper.name = "AxisHelper";
				scene.add( axisHelper );
				
				//Aide light Australie
				var pointLightHelper = new THREE.PointLightHelper( light, 1 );
				pointLightHelper.nme = "PointLightHelper";
				scene.add( pointLightHelper );

				//Modélisation de la Terre
				Earth_geo = new THREE.SphereGeometry(Earth_radius, Earth_segment, Earth_segment);
				
				//Matière de la Terre
				var Earth_material	= new THREE.MeshPhongMaterial({
					map		: THREE.ImageUtils.loadTexture("img/earthmap1k.jpg"),
					bumpMap		: THREE.ImageUtils.loadTexture("img/earthbump1k.jpg"),
					bumpScale	: 0.05,
					specularMap	: THREE.ImageUtils.loadTexture("img/earthspec1k.jpg"),
					specular	: new THREE.Color('grey'),
					shininess	: 5,
				})
	
				var earth = new THREE.Mesh( Earth_geo, Earth_material );
				earth.name = "earth";
				scene.add(earth);
				objectsClick.push(earth);
				
				//Render
				
				renderer = new THREE.WebGLRenderer({antialias: true, alpha: true });	//Alpha pour le glow qui est un sprite en png
				renderer.setSize( window.innerWidth, window.innerHeight );
				container.appendChild( renderer.domElement );

				//Stats
				
				stats.domElement.style.position = 'absolute';
				stats.domElement.style.top = '0px';
				container.appendChild( stats.domElement );

				document.addEventListener( 'mousemove', onDocumentMouseMove, false );
				
				window.addEventListener( 'resize', onWindowResize, false );
			}
			
			function add_cloud(arg_position, arg_intersects){
				
				var Cloud_Material = new THREE.SpriteMaterial({ 
					map: new THREE.ImageUtils.loadTexture("img/glow.png"), 
					useScreenCoordinates: false,
					//alignment: THREE.SpriteAlignment.center,
					color: Cloud_glow_color,
					transparent: false,
					blending: THREE.AdditiveBlending
				});
				
				var cloud = new THREE.Sprite( Cloud_Material );
				
				cloud.name = "Cloud";
				cloud.position.set(arg_position.x, arg_position.y, arg_position.z);
				console.log(mouse);
				
				cloud.lookAt(new THREE.Vector3(0,0,0));
				//A VOIR SI UTILE
				//cloud.worldToLocal(new THREE.Vector3(0,0,0));
				cloud.translateZ(-5);	//Décalage Terre/nuage
				
				cloud.scale.set(1, 1, 1.0);
				
				scene.add(cloud);
				window.removeEventListener( 'mouseup', click_on_sphere, false );
				document.body.style.cursor = "";
			}
			
			function click_on_sphere(){
				
				
				vector.set( mouse.x, mouse.y, 0.1 );
				projector.unprojectVector( vector, camera );
				
				var origin = camera.position;
				var direction = vector.sub(camera.position).normalize();
				var obstacles = objectsClick;
				
				var ray = new THREE.Raycaster( origin, direction);
				var intersects = ray.intersectObjects( obstacles, false);
				
				if(intersects[0]){
					
					var position = intersects[0].point;
					add_cloud(position, intersects);
				
				}
				
				//Aide flèche face normal
				/*
				var longueur = 50;
				var color = "#000000";

				var arrowHelper = new THREE.ArrowHelper( intersects[0].face.normal, new THREE.Vector3(0,0,0), longueur, color );
				scene.add( arrowHelper );
				*/
				
			}
			
			function glow(){
			
				var spriteMaterial = new THREE.SpriteMaterial({ 
					map: new THREE.ImageUtils.loadTexture("img/glow.png"), 
					useScreenCoordinates: false,
					//alignment: THREE.SpriteAlignment.center,
					color: Earth_glow_color,
					transparent: false,
					blending: THREE.AdditiveBlending
				});
				
				var sprite = new THREE.Sprite( spriteMaterial );
				sprite.name = "Earth_glow";
				sprite.scale.set(80, 80, 1.0);
				scene.add(sprite);
			}
			
			function onDocumentMouseMove( event ) {

				event.preventDefault();
				mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;
				mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;

			}
			
			function onWindowResize() {

				camera.aspect = window.innerWidth / window.innerHeight;
				camera.updateProjectionMatrix();
				renderer.setSize( window.innerWidth, window.innerHeight );
			}
			
			function animate() {
			
				//Pour chaque nuage mesh dans la scene
				for(var key in data = scene.children){
			
					//Pour les nuages
					if(data[key].name == "Cloud"){
					
						speed = rand;
						exp = ((Math.sin(time*speed))/2*speed);
						
						//Tranlation du nuage sur son axe Z
						data[key].translateZ(exp);
				    }
				}
			
				Orbitcontrols.update();
				stats.update();
				requestAnimationFrame( animate );
				render();
			}

			function render() {
			
				time++;
				vector.set( mouse.x, mouse.y, 0.1 );
				projector.unprojectVector( vector, camera );
				renderer.setClearColor( 0x000000, 0 );//couleur de fond du canvas et alpha
				renderer.render( scene, camera );
			}

		</script>
</body></html>